{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CourseService = /*#__PURE__*/(() => {\n  class CourseService {\n    constructor(http) {\n      this.http = http;\n      this.coursesUrl = `${environment.API_URL}/courses`;\n    }\n\n    getCourse(id) {\n      return this.http.get(`${this.coursesUrl}/${id}`).pipe(catchError(this.handleError('coursesUrl')));\n    }\n\n    getCourses() {\n      return this.http.get(this.coursesUrl).pipe(catchError(this.handleError('coursesUrl', [])));\n    }\n\n    handleError(operation = 'operation', result) {\n      return error => {\n        // TODO: send the error to remote logging infrastructure\n        console.error(\"Course Service: \" + error); // log to console instead\n        // Let the app keep running by returning an empty result.\n\n        return of(result);\n      };\n    }\n\n  }\n\n  CourseService.ɵfac = function CourseService_Factory(t) {\n    return new (t || CourseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CourseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CourseService,\n    factory: CourseService.ɵfac,\n    providedIn: 'root'\n  });\n  return CourseService;\n})();","map":null,"metadata":{},"sourceType":"module"}