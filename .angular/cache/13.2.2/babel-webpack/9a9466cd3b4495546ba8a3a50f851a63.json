{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services\";\nimport * as i2 from \"@angular/common\";\n\nfunction SearchComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const n_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", n_r2.title, \" \");\n  }\n}\n\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor(newsService) {\n      this.newsService = newsService;\n      this.news$ = null;\n      this.searchTerms = new Subject();\n    } // Push a search term into the observable stream.\n\n\n    search(term) {\n      this.searchTerms.next(term);\n    }\n\n    ngOnInit() {\n      this.news$ = this.searchTerms.pipe( // wait 300ms after each keystroke before considering the term\n      debounceTime(500), // ignore new term if same as previous term\n      distinctUntilChanged(), // switch to new search observable each time the term changes\n      switchMap(term => this.newsService.searchNews(term)));\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.NewsService));\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    decls: 8,\n    vars: 3,\n    consts: [[\"id\", \"search-box\", \"type\", \"text\", \"placeholder\", \"Search\", 1, \"search\", 3, \"input\"], [\"searchBox\", \"\"], [1, \"search-btn\"], [1, \"search-result\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"input\", 0, 1);\n        i0.ɵɵlistener(\"input\", function SearchComponent_Template_input_input_0_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return ctx.search(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\");\n        i0.ɵɵtext(4, \"go\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\", 3);\n        i0.ɵɵtemplate(6, SearchComponent_li_6_Template, 2, 1, \"li\", 4);\n        i0.ɵɵpipe(7, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 1, ctx.news$));\n      }\n    },\n    directives: [i2.NgForOf],\n    pipes: [i2.AsyncPipe],\n    styles: [\".search[_ngcontent-%COMP%]{background-color:#272729;border:1px solid #565758;border-radius:10px;color:#fff;padding:5px 5px 5px 10px;transition:.3s;-webkit-user-select:none;-moz-user-select:none;user-select:none}.search[_ngcontent-%COMP%]:hover{background-color:#3d3d3e;transition:.3s}.search[_ngcontent-%COMP%]:focus{outline:none}.search-btn[_ngcontent-%COMP%]{margin-left:20px;padding:2.5px 6.5px 6.5px;border:1px solid #343536;-webkit-user-select:none;-moz-user-select:none;user-select:none;border-radius:15px}.search-btn[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#565758;font-weight:800;color:#1b1c1c}.search-result[_ngcontent-%COMP%]{position:fixed;top:50px;background-color:#3d3d3e;color:#f0f8ff;border-radius:10px;list-style-type:none;padding-left:5px}.row[_ngcontent-%COMP%]{display:block;text-decoration:none;padding:2px;border-radius:5px;margin:5px 5px 5px 0}.row[_ngcontent-%COMP%]:hover{background-color:#565758;cursor:pointer}\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}