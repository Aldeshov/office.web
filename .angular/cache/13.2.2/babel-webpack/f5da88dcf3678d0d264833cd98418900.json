{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil, startWith, pairwise } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../header/header.component\";\nimport * as i5 from \"@angular/forms\";\n\nfunction CourseFilesComponent_app_header_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-header\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"name\", ctx_r0.user.first_name);\n  }\n}\n\nfunction CourseFilesComponent_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_1_div_3_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const t_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.go(t_r7);\n    });\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" > \\u00A0 \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const t_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", t_r7.title, \" \");\n  }\n}\n\nfunction CourseFilesComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_1_div_5_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const c_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.route(c_r10);\n    });\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵelement(2, \"img\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵelementStart(4, \"span\", 16);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", c_r10.ico, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", c_r10.name, \" \");\n  }\n}\n\nfunction CourseFilesComponent_div_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_1_div_6_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.add();\n    });\n    i0.ɵɵelement(1, \"span\", 17);\n    i0.ɵɵelement(2, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CourseFilesComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"header\");\n    i0.ɵɵtemplate(3, CourseFilesComponent_div_1_div_3_Template, 4, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"main\");\n    i0.ɵɵtemplate(5, CourseFilesComponent_div_1_div_5_Template, 6, 2, \"div\", 8);\n    i0.ɵɵtemplate(6, CourseFilesComponent_div_1_div_6_Template, 3, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.objects);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.user.is_teacher);\n  }\n}\n\nfunction CourseFilesComponent_div_2_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const d_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", d_r18, \" >\");\n  }\n}\n\nfunction CourseFilesComponent_div_2_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const s_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", s_r19.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", s_r19.first_name, \" \", s_r19.last_name, \"\");\n  }\n}\n\nfunction CourseFilesComponent_div_2_input_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 34);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_2_input_35_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext(2);\n      return ctx_r20.delete();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CourseFilesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"table\");\n    i0.ɵɵelementStart(2, \"tr\", 20);\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelementStart(4, \"label\");\n    i0.ɵɵtext(5, \"File Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵelementStart(7, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function CourseFilesComponent_div_2_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.fileName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"tr\", 20);\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelementStart(10, \"label\");\n    i0.ɵɵtext(11, \"Directory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 22);\n    i0.ɵɵelementStart(13, \"span\", 23);\n    i0.ɵɵtext(14, \"Current Folder >\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, CourseFilesComponent_div_2_span_15_Template, 2, 1, \"span\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"tr\", 20);\n    i0.ɵɵelement(17, \"td\");\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵelementStart(19, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function CourseFilesComponent_div_2_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.dirName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"tr\", 20);\n    i0.ɵɵelement(21, \"td\");\n    i0.ɵɵelementStart(22, \"td\");\n    i0.ɵɵelementStart(23, \"input\", 26);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_2_Template_input_click_23_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.addDir();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"tr\", 20);\n    i0.ɵɵelementStart(25, \"td\");\n    i0.ɵɵelementStart(26, \"label\");\n    i0.ɵɵtext(27, \"Access Students\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"td\");\n    i0.ɵɵelementStart(29, \"select\", 27);\n    i0.ɵɵtemplate(30, CourseFilesComponent_div_2_option_30_Template, 2, 3, \"option\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"tr\");\n    i0.ɵɵelement(32, \"td\");\n    i0.ɵɵelementStart(33, \"td\", 29);\n    i0.ɵɵelementStart(34, \"input\", 30);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_2_Template_input_click_34_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.save();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(35, CourseFilesComponent_div_2_input_35_Template, 1, 0, \"input\", 31);\n    i0.ɵɵelementStart(36, \"input\", 32);\n    i0.ɵɵlistener(\"click\", function CourseFilesComponent_div_2_Template_input_click_36_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.cancel();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.fileName);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.dirs);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.dirName);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.students);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.editFile);\n  }\n}\n\nfunction CourseFilesComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelement(1, \"img\", 36);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CourseFilesComponent = /*#__PURE__*/(() => {\n  class CourseFilesComponent {\n    constructor(userService, router, r, auth, fileService) {\n      this.userService = userService;\n      this.router = router;\n      this.r = r;\n      this.auth = auth;\n      this.fileService = fileService;\n      this.loading = true; // Current User\n\n      this.user = null; // To add File\n\n      this.fileName = \"\";\n      this.dirs = [];\n      this.dirName = \"\";\n      this.students = [];\n      this.forf = \"\"; //For Form adding file\n\n      this.addFile = false;\n      this.editFile = false; // Titles to Navigate \n\n      this.title = []; // Files Owner\n\n      this.owner = null; // Objects: Files or Directories\n\n      this.objects = [];\n      this.destroyed = new Subject(); // Current Path\n\n      this.path = \"\";\n    }\n\n    ngOnInit() {\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd), pairwise(), filter(events => events[0].url === events[1].url), startWith('Initial call'), takeUntil(this.destroyed)).subscribe(() => {\n        this.fetchData();\n      });\n    }\n\n    fetchData() {\n      this.loading = true; // Getting Current path then Objects: from current url path\n\n      try {\n        this.path = decodeURIComponent(this.r.snapshot.paramMap.get('path'));\n      } catch (error) {\n        this.router.navigate(['/student-files/0/%2F']);\n      }\n\n      this.userService.getUser().subscribe(response => {\n        this.user = response;\n        if (response.is_teacher && +this.r.snapshot.paramMap.get('teacher') == 0) this.router.navigate(['/student-files/' + response.id + '/' + this.r.snapshot.paramMap.get('path')]);\n        this.fileService.getFiles(+this.r.snapshot.paramMap.get('teacher'), this.r.snapshot.paramMap.get('path')).subscribe(response => {\n          this.func(response);\n          this.loading = false;\n        }, _ => {\n          this.router.navigate(['/student-files/0/%2F']);\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroyed.next();\n      this.destroyed.complete();\n    }\n\n    func(files) {\n      // Clear objects\n      this.objects = [];\n\n      if (+this.r.snapshot.paramMap.get('teacher') == 0 && this.user.is_student) {\n        let teachs = [];\n\n        for (let i = 0; i < files.length; i++) {\n          if (teachs.find(t => t == files[i].owner.id) == undefined) {\n            this.objects.push({\n              id: files[i].owner.id + \"\",\n              name: files[i].owner.first_name + \" \" + files[i].owner.last_name,\n              is_Dir: true,\n              teacher: files[i].owner.id + \"\",\n              path: '/%2F',\n              ico: \"../../assets/images/types/teacher.ico\"\n            });\n            teachs.push(files[i].owner.id);\n          }\n        }\n      } else {\n        this.get(files);\n      }\n\n      this.title = []; //Pre Titles\n\n      if (this.user.is_student) {\n        this.title.push({\n          title: \"Teachers\",\n          teacher: 0,\n          path: \"%2F\"\n        });\n\n        if (+this.r.snapshot.paramMap.get('teacher') != 0) {\n          this.title.push({\n            title: files[0].owner.first_name + \" \" + files[0].owner.last_name,\n            teacher: +this.r.snapshot.paramMap.get('teacher'),\n            path: \"%2F\"\n          });\n        }\n      }\n\n      if (this.user.is_teacher) {\n        this.title.push({\n          title: this.user.first_name + \" \" + this.user.last_name,\n          teacher: +this.r.snapshot.paramMap.get('teacher'),\n          path: \"%2F\"\n        });\n      } // Next Titles\n\n\n      this.titles();\n    } // Adding Files(For Teacher)\n\n\n    add() {\n      this.addFile = true;\n      document.getElementById('main').classList.add('disable');\n      this.userService.getStudents().subscribe(response => this.students = response);\n    }\n\n    edit(name) {\n      this.editFile = true;\n      document.getElementById('main').classList.add('disable');\n      this.userService.getStudents().subscribe(response => this.students = response);\n      this.fileName = name;\n      this.forf = name;\n    }\n\n    addDir() {\n      if (this.dirName != \"\" && this.dirs.length < 4) {\n        this.dirs.push(this.dirName);\n      } else if (this.dirName != \"\" && this.dirs.length == 4) {\n        alert(\"Max count of Folders!\");\n      }\n\n      this.dirName = \"\";\n    }\n\n    getSelectValues(select) {\n      var result = [];\n      var options = select && select.options;\n      var opt;\n\n      for (var i = 0, iLen = options.length; i < iLen; i++) {\n        opt = options[i];\n\n        if (opt.selected) {\n          result.push(opt.value);\n        }\n      }\n\n      return result;\n    }\n\n    save() {\n      let selected = this.getSelectValues(document.getElementById(\"select\"));\n\n      if (this.fileName != \"\" && selected.length != 0) {\n        let students = [];\n\n        for (let i = 0; i < selected.length; i++) {\n          students.push(this.students.find(student => student.id == selected[i]));\n        }\n\n        let path = this.path;\n\n        for (let i = 0; i < this.dirs.length; i++) {\n          if (path.length != 1) {\n            path += \"/\";\n          }\n\n          path += this.dirs[i];\n        }\n\n        if (this.addFile) {\n          this.fileService.addFile(this.user.id, path, this.fileName, students).subscribe(_ => {\n            this.addFile = false;\n            document.getElementById('main').classList.remove('disable');\n            location.reload();\n          });\n        }\n\n        if (this.editFile) {\n          this.fileService.updateFile(this.user.id, encodeURIComponent(this.path), this.forf, students, this.fileName, path).subscribe(_ => {\n            this.editFile = false;\n            document.getElementById('main').classList.remove('disable');\n            location.reload();\n          });\n        }\n      }\n    }\n\n    delete() {\n      this.fileService.deleteFile(this.user.id, encodeURIComponent(this.path), this.forf).subscribe(_ => {\n        this.editFile = false;\n        document.getElementById('main').classList.remove('disable');\n        location.reload();\n      });\n    } // Titles\n    // Adding until end of directory\n\n\n    titles() {\n      let k = 0;\n\n      if (this.path != \"/\") {\n        while (k != -1) {\n          k += 1;\n          let f = k;\n          k = this.path.indexOf(\"/\", k);\n\n          if (k == -1) {\n            this.title.push({\n              title: this.path.substr(f),\n              teacher: +this.r.snapshot.paramMap.get('teacher'),\n              path: encodeURIComponent(this.path)\n            });\n          } else {\n            this.title.push({\n              title: this.path.substr(f, k - f),\n              teacher: +this.r.snapshot.paramMap.get('teacher'),\n              path: encodeURIComponent(this.path.substr(0, k))\n            });\n          }\n        }\n      }\n    } // When clicked Object: Navigate -> Get objects and create titles\n\n\n    route(obj) {\n      // If this is a Directory\n      if (obj.is_Dir) {\n        // Navigate with teacher and path information\n        this.router.navigate(['/student-files/' + obj.teacher + '/' + obj.path]); // Create Title\n\n        this.title.push({\n          title: obj.name,\n          teacher: +obj.teacher,\n          path: obj.path\n        }); // If we are in Teachers path(For Student)\n\n        if (obj.id == obj.teacher) {\n          this.fileService.getFiles(+obj.id, this.r.snapshot.paramMap.get('path')).subscribe(files => this.get(files));\n        } else {\n          // If we in Main Path: '/' ('%2F' for URL)\n          if (this.r.snapshot.paramMap.get('path') == \"%2F\") {\n            this.path = this.path + obj.id;\n            this.fileService.getFiles(+this.r.snapshot.paramMap.get('teacher'), this.r.snapshot.paramMap.get('path') + obj.id).subscribe(files => this.get(files));\n          } else {\n            this.path = this.path + '/' + obj.id;\n            this.fileService.getFiles(+this.r.snapshot.paramMap.get('teacher'), this.r.snapshot.paramMap.get('path') + \"%2F\" + obj.id).subscribe(files => this.get(files));\n          }\n        }\n      } // If this is a File\n      else {\n        if (this.user.is_teacher) {\n          this.edit(obj.name);\n        } // Thats just sample. \n        // Here we can get file from server\n        else {\n          alert(\"This is a File\");\n        }\n      }\n    }\n\n    go(title) {\n      // Just go to (more precisely refresh) route\n      this.router.navigate(['/student-files/' + title.teacher + '/' + title.path]);\n    } // Just Getting Files and Directories From Array CourseFile[]\n\n\n    get(files) {\n      // Clear Objects to push new objects\n      this.objects = []; // Temp array of directories: To avoid duplication\n\n      let dirs = []; // Then iterate the CourseFiles(There may be files or directories)\n\n      for (let i = 0; i < files.length; i++) {\n        // More precisely -> condition means: (is this a File?)\n        if (this.path == files[i].path) {\n          // Then We get Type of File. For example .doc or .txt\n          let type = \"\";\n\n          if (files[i].name.indexOf(\".\") != -1) {\n            for (let j = 0; j < files[i].name.length; j++) {\n              if (files[i].name[files[i].name.length - j - 1] == '.') {\n                break;\n              }\n\n              type += files[i].name[files[i].name.length - j - 1];\n            }\n          }\n\n          type = type.split(\"\").reverse().join(\"\"); // Let give to object ico using type\n\n          let icon = \"../../assets/images/types/unknown.ico\";\n\n          if (type == \"doc\" || type == \"docx\") {\n            icon = \"../../assets/images/types/doc.ico\";\n          }\n\n          if (type == \"xls\" || type == \"xlsx\") {\n            icon = \"../../assets/images/types/xls.ico\";\n          }\n\n          if (type == \"txt\" || type == \"md\") {\n            icon = \"../../assets/images/types/txt.ico\";\n          }\n\n          if (type == \"ppt\" || type == \"pptx\") {\n            icon = \"../../assets/images/types/ppt.ico\";\n          }\n\n          if (type == \"pdf\") {\n            icon = \"../../assets/images/types/pdf.png\";\n          }\n\n          if (type == \"rar\" || type == \"zip\") {\n            icon = \"../../assets/images/types/rar.png\";\n          } // Temp for a file name to cut(if characters length more than 15 )\n\n\n          let temp = files[i].name;\n\n          if (temp.length > 15) {\n            temp = temp.substr(0, 7) + \"...\" + temp.substr(temp.length - 4, 4);\n          } // Let push our Object: File\n\n\n          this.objects.push({\n            id: files[i].name,\n            name: temp,\n            is_Dir: false,\n            teacher: this.r.snapshot.paramMap.get('teacher'),\n            path: this.r.snapshot.paramMap.get('path') + \"%2F\" + files[i].id,\n            ico: icon\n          });\n        } // Here we get Directory\n        else {\n          // Getting Directory Name\n          let temp = \"\";\n          let l = this.path;\n\n          if (this.path != \"/\") {\n            l += \"/\";\n          }\n\n          for (let j = l.length; j < files[i].path.length; j++) {\n            if (files[i].path[j] == \"/\") {\n              break;\n            } else {\n              temp += files[i].path[j];\n            }\n          } // WE got Directory name: temp\n          // WE must check: had we add the same directory(temp) to objects \n\n\n          if (dirs.find(d => d == temp) == undefined) {\n            // If not then we add the new directory\n            dirs.push(temp); // Getting name(cut or full)\n\n            let full = temp;\n\n            if (temp.length > 15) {\n              temp = temp.substr(0, 7) + \"...\" + temp.substr(temp.length - 4, 4);\n            } // Let push our Directory\n            // Difference between conditions(bottom): that path name\n            // (1) If we in the main path(Where just '/' ('%2F' is the url adding), \n            // we don't add slash (For example \"'/' + 'New Directory Name'\"), \n            // (2) otherwise we add (For example \"'/Directory' + '/' + 'New Directory Name'\"))\n\n\n            if (this.r.snapshot.paramMap.get('path') == \"%2F\") {\n              // (1)\n              this.objects.push({\n                id: full,\n                name: temp,\n                is_Dir: true,\n                teacher: this.r.snapshot.paramMap.get('teacher'),\n                path: this.r.snapshot.paramMap.get('path') + full,\n                ico: \"../../assets/images/types/folder.ico\"\n              });\n            } else {\n              // (2)\n              this.objects.push({\n                id: full,\n                name: temp,\n                is_Dir: true,\n                teacher: this.r.snapshot.paramMap.get('teacher'),\n                path: this.r.snapshot.paramMap.get('path') + \"%2F\" + full,\n                ico: \"../../assets/images/types/folder.ico\"\n              });\n            }\n          }\n        }\n      }\n    } // Exit from file adding\n\n\n    cancel() {\n      this.addFile = false;\n      this.editFile = false;\n      this.fileName = \"\";\n      this.forf = \"\";\n      document.getElementById('main').classList.remove('disable');\n    }\n\n  }\n\n  CourseFilesComponent.ɵfac = function CourseFilesComponent_Factory(t) {\n    return new (t || CourseFilesComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i1.FileService));\n  };\n\n  CourseFilesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CourseFilesComponent,\n    selectors: [[\"app-course-files\"]],\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"name\", 4, \"ngIf\"], [\"id\", \"main\", 4, \"ngIf\"], [\"class\", \"form\", 4, \"ngIf\"], [\"class\", \"loading\", \"style\", \"width: 100%; height: 100%; display: flex; align-items: center; justify-content: space-around;\", 4, \"ngIf\"], [3, \"name\"], [\"id\", \"main\"], [1, \"content\"], [\"class\", \"link\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"obj\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"obj\", 3, \"click\", 4, \"ngIf\"], [1, \"link\", 3, \"click\"], [1, \"dir\"], [1, \"obj\", 3, \"click\"], [1, \"obj-type\"], [\"height\", \"64px\", 3, \"src\"], [1, \"obj-name\"], [1, \"cn\"], [1, \"forP\", \"first\"], [1, \"forP\", \"second\"], [1, \"form\"], [1, \"row\"], [\"type\", \"text\", \"placeholder\", \"File Name\", \"required\", \"\", 1, \"input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\"], [\"id\", \"name\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Folder Name\", \"maxlength\", \"32\", \"required\", \"\", 1, \"input\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"adding\", \"type\", \"button\", \"value\", \"Add Folder\", 1, \"button\", 3, \"click\"], [\"required\", \"\", \"multiple\", \"\", \"id\", \"select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"buttons\"], [\"id\", \"save\", \"type\", \"button\", \"value\", \"Save\", 1, \"button\", 3, \"click\"], [\"class\", \"button\", \"type\", \"button\", \"value\", \"Delete\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cancel\", 1, \"button\", 3, \"click\"], [3, \"value\"], [\"type\", \"button\", \"value\", \"Delete\", 1, \"button\", 3, \"click\"], [1, \"loading\", 2, \"width\", \"100%\", \"height\", \"100%\", \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"space-around\"], [\"src\", \"../../assets/images/loading.gif\", \"width\", \"60px\"]],\n    template: function CourseFilesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CourseFilesComponent_app_header_0_Template, 1, 1, \"app-header\", 0);\n        i0.ɵɵtemplate(1, CourseFilesComponent_div_1_Template, 7, 3, \"div\", 1);\n        i0.ɵɵtemplate(2, CourseFilesComponent_div_2_Template, 37, 5, \"div\", 2);\n        i0.ɵɵtemplate(3, CourseFilesComponent_div_3_Template, 2, 0, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addFile || ctx.editFile);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i3.NgIf, i4.HeaderComponent, i3.NgForOf, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.NgModel, i5.MaxLengthValidator, i5.NgSelectOption, i5.ɵNgSelectMultipleOption],\n    styles: [\"header[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;margin-top:15px;padding:3px}main[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap}.dir[_ngcontent-%COMP%]{font-weight:700}.obj[_ngcontent-%COMP%]{position:relative;background-color:#1a1a1b;border:1px solid #343536;color:#ffebcd;margin:3px;border-radius:15px;transition:.2s;-webkit-user-select:none;-moz-user-select:none;user-select:none;display:flex;flex-direction:column;align-items:center;justify-content:space-around;padding:5px 15px;width:120px;height:80px;box-shadow:0 0 10px #000000b3}.obj[_ngcontent-%COMP%]:hover{border:1px solid rgb(100,100,100);background-color:#323232;transition:.2s;cursor:pointer}.obj-type[_ngcontent-%COMP%]{-webkit-user-select:none;-moz-user-select:none;user-select:none}.obj[_ngcontent-%COMP%]:active{background-color:#787878}.link[_ngcontent-%COMP%]{background-color:#1a1a1b;border:1px solid #343536;color:#ffebcd;max-height:20px;border-radius:10px;margin-right:10px;-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:10px;margin-top:5px;margin-bottom:5px;box-shadow:0 0 10px #000000b3}.link[_ngcontent-%COMP%]:hover{cursor:pointer;border:1px solid rgb(100,100,100);background-color:#323232}.content[_ngcontent-%COMP%]{position:absolute;top:55px;left:55px}.cn[_ngcontent-%COMP%]{font-size:12px;font-weight:700}.forP[_ngcontent-%COMP%]{position:relative;width:3px;height:50px;background-color:#464646;transition:.3s}.second[_ngcontent-%COMP%]{top:-20px;width:2.5px;transform:rotate(90deg)}.first[_ngcontent-%COMP%]{top:20px}.disable[_ngcontent-%COMP%]{opacity:.5;pointer-events:none;transition:.2s}.form[_ngcontent-%COMP%]{position:fixed;top:35%;left:30%;width:30%;min-width:500px;min-height:300px;height:40%;background-color:#1a1a1b;border:1px solid #343536;border-radius:15px;color:#ffebcd;padding:20px;font-weight:800;box-shadow:0 0 10px #000000b3}table[_ngcontent-%COMP%]{width:100%;height:100%}.flex[_ngcontent-%COMP%]{display:flex;flex-direction:column}.input[_ngcontent-%COMP%]{border:none;background-color:#1a1a1b;border-bottom:1px solid rgb(120,120,120);color:silver;transition:.3s}.input[_ngcontent-%COMP%]:active{transition:.3s;background-color:#343536}input[_ngcontent-%COMP%]:focus{outline:none;border-bottom:1.5px solid rgb(120,120,120)}.button[_ngcontent-%COMP%]{border:1px solid rgb(220,220,220);font-size:14px;background-color:#f5f5f5;transition:.3s;border-radius:5px;padding:5px 10px}.button[_ngcontent-%COMP%]:hover{background-color:#d2d2d2;transition:.3s;cursor:pointer}select[_ngcontent-%COMP%]{border:1px solid #343536;border-radius:5px;background-color:#1a1a1b;color:#f0f8ff;min-width:100px;padding:0 5px}#main[_ngcontent-%COMP%]{transition:.2s}.loading[_ngcontent-%COMP%]{pointer-events:none}.buttons[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;justify-content:space-between}\"]\n  });\n  return CourseFilesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}