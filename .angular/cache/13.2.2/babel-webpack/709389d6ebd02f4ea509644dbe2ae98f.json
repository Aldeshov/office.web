{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(http) {\n      this.http = http;\n      this.tokenSubject = new BehaviorSubject(localStorage.getItem('Token'));\n      this.token = this.tokenSubject.asObservable();\n    }\n\n    get tokenValue() {\n      return this.tokenSubject.value;\n    }\n\n    login(username, password) {\n      return this.http.post(`${environment.API_URL}/login`, {\n        username,\n        password\n      }).pipe(map(response => {\n        localStorage.setItem('Token', response.token);\n        this.tokenSubject.next(response.token);\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem('Token');\n      this.tokenSubject.next(null);\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}